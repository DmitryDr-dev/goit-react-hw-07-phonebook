{"version":3,"sources":["components/ContactsList/partials/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactsList/ContactsList.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Section/Section.jsx","redux/contactsSelectors.js","services/mockaApi.js","redux/contactsOperations.js","components/AddContactForm/AddContactForm.jsx","components/ContactsList/partials/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","redux/contactsActions.js","components/Filter/Filter.jsx","views/ContactsPage/ContactsPage.jsx","App.js","redux/contactsReducer.js","redux/store.js","index.js","components/AddContactForm/AddContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","sectionTitle","getContacts","state","contacts","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","contact","name","includes","endpoint","fetchAllContacts","a","axios","get","data","console","log","message","addContact","post","deleteContact","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","_","rejectWithValue","mockApi","addNewContact","contactToAdd","newContact","AddContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","checkForDuplicatedContacts","allContacts","normalizedContact","find","alert","onAddNewContact","clearInput","handleInputChange","e","target","value","trim","contactForm","onSubmit","preventDefault","contactFormLabel","htmlFor","type","pattern","required","onChange","contactFormInput","contactFormBtn","ContactsListItem","onDelete","contactName","contactNumber","contactDltBtn","onClick","ContactsList","useEffect","map","phone","contactsItem","onDeleteContact","changeFilter","createAction","Filter","filterInputId","filterValue","filterLabel","filterInput","ContactsPage","App","createReducer","fulfilled","payload","loading","pending","rejected","error","contactsReducers","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.929c367b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsListItem_contact__20mKL\",\"contactNumber\":\"ContactsListItem_contactNumber__35bj6\",\"contactName\":\"ContactsListItem_contactName__38E9Q\",\"contactDltBtn\":\"ContactsListItem_contactDltBtn__2lCXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3Wome\",\"filterLabel\":\"Filter_filterLabel__17yPZ\",\"filterInput\":\"Filter_filterInput__245FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2nCVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsList_contacts__38wI0\",\"contactsItem\":\"ContactsList_contactsItem__1CZAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3I-X4\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nexport function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h2 className={styles.sectionTitle}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","export const getContacts = state => state.contacts;\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://61a2a5ef014e1900176de9af.mockapi.io/api/v1/';\r\nconst endpoint = 'contacts';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport async function fetchAllContacts() {\r\n  try {\r\n    const { data } = await axios.get(`${endpoint}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log('Houston, we have a problem: ', error.message);\r\n    return error;\r\n  }\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  try {\r\n    const { data } = await axios.post(`${endpoint}`, contact);\r\n    return data;\r\n  } catch (error) {\r\n    console.log('Houston, we have a problem: ', error.message);\r\n    return error;\r\n  }\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  try {\r\n    const data = await axios.delete(`${endpoint}/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log('Houston, we have a problem: ', error.message);\r\n    return error;\r\n  }\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as mockApi from 'services/mockaApi';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await mockApi.fetchAllContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addNewContact = createAsyncThunk(\r\n  'contacts/addNewContact',\r\n  async (contactToAdd, { rejectWithValue }) => {\r\n    try {\r\n      const newContact = await mockApi.addContact(contactToAdd);\r\n      return newContact;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const contact = await mockApi.deleteContact(id);\r\n      console.log(contact);\r\n      return contact;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './AddContactForm.module.css';\r\nimport { getContacts } from 'redux/contactsSelectors';\r\nimport { addNewContact } from 'redux/contactsOperations';\r\n\r\nexport function AddContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const onAddNewContact = newContact => dispatch(addNewContact(newContact));\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const checkForDuplicatedContacts = (allContacts, newContact) => {\r\n    const normalizedContact = newContact.name.toLowerCase();\r\n\r\n    if (\r\n      allContacts.find(\r\n        contact => contact.name.toLowerCase() === normalizedContact,\r\n      )\r\n    ) {\r\n      return alert(`${newContact.name} already exists!`);\r\n    }\r\n\r\n    onAddNewContact(newContact);\r\n    clearInput();\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value.trim());\r\n        return;\r\n      case 'number':\r\n        setNumber(value.trim());\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    checkForDuplicatedContacts(contacts, newContact);\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\r\n      <label className={styles.contactFormLabel} htmlFor={nameInputId}>\r\n        Name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        id={nameInputId}\r\n        value={name}\r\n        onChange={handleInputChange}\r\n        className={styles.contactFormInput}\r\n      />\r\n      <label className={styles.contactFormLabel} htmlFor={numberInputId}>\r\n        Number\r\n      </label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        id={numberInputId}\r\n        value={number}\r\n        onChange={handleInputChange}\r\n        className={styles.contactFormInput}\r\n      />\r\n      <button type=\"submit\" className={styles.contactFormBtn}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactsListItem.module.css';\r\n\r\nexport function ContactsListItem({ name, number, onDelete }) {\r\n  return (\r\n    <div className={styles.contact}>\r\n      <span>\r\n        <span className={styles.contactName}>{name}: </span>\r\n        <span className={styles.contactNumber}>{number}</span>\r\n      </span>\r\n      <button type=\"button\" className={styles.contactDltBtn} onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactsListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts, deleteContact } from 'redux/contactsOperations';\r\nimport styles from './ContactsList.module.css';\r\nimport { getFilteredContacts } from 'redux/contactsSelectors';\r\nimport { ContactsListItem } from './partials/ContactsListItem/ContactsListItem';\r\n\r\nexport function ContactsList() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul className={styles.contacts}>\r\n      {contacts.map(({ id, name, phone }) => {\r\n        return (\r\n          <li key={id} className={styles.contactsItem}>\r\n            <ContactsListItem\r\n              name={name}\r\n              number={phone}\r\n              onDelete={() => onDeleteContact(id)}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Filter.module.css';\r\nimport { getFilter } from 'redux/contactsSelectors';\r\nimport { changeFilter } from 'redux/contactsActions';\r\n\r\nexport function Filter() {\r\n  const filterInputId = uuidv4();\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label htmlFor={filterInputId} className={styles.filterLabel}>\r\n        Search\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        className={styles.filterInput}\r\n        id={filterInputId}\r\n        value={filterValue}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Filter() {\r\n//   const value = useSelector(getFilter);\r\n//   const dispatch = useDispatch();\r\n\r\n//   const filterInputId = uuidv4();\r\n\r\n//   return (\r\n//     <div className={styles.filter}>\r\n//       <label htmlFor={filterInputId} className={styles.filterLabel}>\r\n//         Search\r\n//       </label>\r\n//       <input\r\n//         type=\"text\"\r\n//         className={styles.filterInput}\r\n//         id={filterInputId}\r\n//         value={value}\r\n//         onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Filter;\r\n","import {\r\n  Container,\r\n  Section,\r\n  AddContactForm,\r\n  ContactsList,\r\n  Filter,\r\n} from 'components';\r\n\r\nexport function ContactsPage() {\r\n  return (\r\n    <Container>\r\n      <h1>Your Contacts</h1>\r\n      <Section>\r\n        <AddContactForm />\r\n      </Section>\r\n      <Section>\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n","import { ContactsPage } from 'views';\r\n\r\nfunction App() {\r\n  return <ContactsPage />;\r\n}\r\n\r\nexport default App;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addNewContact,\r\n  deleteContact,\r\n} from 'redux/contactsOperations';\r\nimport { changeFilter } from 'redux/contactsActions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => [...payload],\r\n  [addNewContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload.data.id),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [addNewContact.pending]: () => true,\r\n  [deleteContact.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addNewContact.fulfilled]: () => false,\r\n  [addNewContact.rejected]: () => false,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.pending]: () => null,\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [addNewContact.pending]: () => null,\r\n  [addNewContact.rejected]: (_, { payload }) => payload,\r\n  [deleteContact.pending]: () => null,\r\n  [deleteContact.rejected]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducers = combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducers } from 'redux/contactsReducer';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: persistReducer(contactsPersistConfig, contactsReducers),\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from 'redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </PersistGate>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AddContactForm_contactForm__lACf0\",\"contactFormInput\":\"AddContactForm_contactFormInput__27x5t\",\"contactFormBtn\":\"AddContactForm_contactFormBtn__22Uw7\"};"],"sourceRoot":""}